The Let's Encrypt process uses two teminals. In the first terminal, the
'letsencrypt' program runs and tells you to do things. In the second
terminal you do what the 'letsencrypt' program says, like create files
with particular content.

It is also OK to execute the procedure multiple times while learning the
process. Let's Encrypt will issue a new certifcate on a second or thrid run.

The process below reuses the existing webserver key for key continuity.
We also need to be mindful of unexpected key changes due to Public-Key-Pins
header used for HTTP public key pinning.

Be sure to restart Apache after the process so the new certifcate is used.

1. Log-in to VM, su to root with "sudo su -".
   CD to root's home with "cd ~".
   An existing CSR using the existing key is in Home.

2. Open a second terminal, su to root.
   CD to /var/www/html/.well-known/acme-challenge/.
   Remove past challenges.
 
3. letsencrypt --manual --email webmaster@cryptopp.com --csr ~/cryptopp-com.req.pem auth
   This terminal is now occupied by LE client.
   LE client will send requests and receive responses.

   LE client will tell you to create a file with specific content.
   Create the nessary files in the other terminal. Once the
   challenges have been accepted client will download a new cert.

4. Once the certifcate issues, copy it to cryptopp-com.pem

   # cp 0000_cert.pem /etc/pki/tls/certs/cryptopp-com.pem
   cp: overwrite ‘/etc/pki/tls/certs/cryptopp-com.pem’? y

   The existing chain should be OK, but it can be copied if desired.
   Test the website. Once tested it is OK to delete the local
   Let's Encrypt artifacts in Home.

5. Restart the Apache web server

   systemctl restart httpd24-httpd.service

----------

# find /etc/ -name 'cryptopp*.pem'
/etc/pki/tls/private/cryptopp-com.key.pem
/etc/pki/tls/certs/cryptopp-com.pem
/etc/pki/tls/certs/cryptopp-com.chain.pem
