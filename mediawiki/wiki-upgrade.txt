Installing a new version of Mediawiki sucks for a several reasons.
First, it happens too frequently. Second, we have to disable some
of our security hardening and reenable it later. Third, we have to
install a bunch of developer tools and then remove them. Fourth,
Mediawiki uses bleeding edge components but CentOS provides
antique software.

You should set aside about 30 minutes to one hour for the migration.
The process itself is copy/paste and should take about 8 minutes.
Unfortunately something usually breaks even on minor version bumps.
You will most likely need extra fiddling time.

In the instructions below the Crypto++ Wiki is located at
/var/www/html/w. https://www.cryptopp.com/wiki works because
of an Apache mod-rewrite rule.

Step 1 - Get root
=================

1. sudo su -

Step 2 - Clear pending jobs
===========================

Some actions in the database are delayed. Run them now.

1. php /var/www/html/w/maintenance/runJobs.php

Step 3 - Incremental backup
===========================

1. bash /etc/cron.daily/bitvise-backup

The backup takes about 20 to 25 minutes.

Step 4 - Local backup of wiki only
==================================

Make a local backup for quick restoration and delete a
previous local backup, if present:

1. rm -rf /var/www/html/wiki-backup
2. cp -r /var/www/html/w /var/www/html/wiki-backup

Do not skip the backup step. Later you will need LocalSettings.php
from the local backup.

Delete the current vendor directory:

3. rm -rf /var/www/html/w/vendor/*

Step 5 - Install composer
=========================

# This gets an old composer with dependencies.
# Red Hat SCL does not supply an updated composer.

1. yum -y install composer
2. hash -r
3. Copy the list of dependencies

Step (1) is dangerous. Composer is a developer tool that brings
in 30+ dependencies. Composer and friends require unsafe functions.
They must be removed after the Mediawiki upgrade.

Step 6 - Disable server hardening
=================================

1. cp /etc/opt/rh/rh-php71/php.d/security.ini.weak /etc/opt/rh/rh-php71/php.d/security.ini

security.ini.weak allows:
   - open_basedir=<any>
   - allow_url_fopen=On
   - allow_url_include=On
   - disable_functions=<none>

Step (2) is dangerous. It allows many popular attack vectors.
This change must be undone after composer has been run.

Step 7 - Download Media Wiki
============================

Clear old artifacts:

1. rm -rf /tmp/mediawiki* /tmp/w/

Temporary unpack:

1. cd /tmp
2. wget https://releases.wikimedia.org/mediawiki/1.33/mediawiki-1.33.2.tar.gz
3. tar -xzf mediawiki-1.33.2.tar.gz
4. mv mediawiki-1.33.2/ w
5. rsync -avh --dry-run /tmp/w /var/www/html/

And then:

6. rsync -avh /tmp/w /var/www/html/

It is OK to delete the artifacts in /tmp.

Step 8 - Update Mediawiki dependencies
======================================

Use composer to update Mediawiki dependencies. This is needed
because the release tarball does not include them.

1. cd /var/www/html/w/
2. php -d extension=phar.so composer.phar update

Step (2) is dangerous. It runs composer as root, and does not
disable plugins or scripts in the third-party projects. The
third-party projects effectively have full control over
the web server and virtual machine.

If you experience errors in vendor/ then revisit Step (4).

Step 9 - Restore LocalSettings.php
==================================

The backup of LocalSettings.php is in /var/www/html/wiki-backup.

Make a back up of the new LocalSettings.php in case it is needed.

1. cp LocalSettings.php LocalSettings.php.bu
2. cp /var/www/html/wiki-backup/LocalSettings.php .

Step 10 - Update for new Mediawiki
=================================

1. Open update-wiki.sh
2. Change WIKI_REL=REL1_32 to appropriate version

update-wiki.sh is available in this GitHub repo.

Next, cross your fingers:

3. php /var/www/html/w/maintenance/update.php

And then:

4. bash /var/www/html/w/update-wiki.sh

maintenance/update.php must succeed or the migration is a failure.
You must fix failures or go back to the down-level version of
MediaWiki saved at /var/www/html/wiki-backup.

The head notes cover what update-wiki.sh does. It includes
updating the components in skins/ and extensions/, running
maintenance/update.php, and fixing permissions.

The script also restarts MySQL and Apache.

At this point you should be able to test the installation by
visiting Special:Version:

5. https://www.cryptopp.com/wiki/Special:Version

Step 11 - Restore server hardening
==================================

1. cp /etc/opt/rh/rh-php71/php.d/security.ini.hard /etc/opt/rh/rh-php71/php.d/security.ini

security.ini.hard re-enables:
   - open_basedir="..."
   - allow_url_fopen=Off
   - allow_url_include=Off
   - disable_functions="apache_note ..."
  
Step 12 - Remove Composer
=========================

The list from Step (5) should be cribbed away. Here is the one
produced by CentOS 7 during install:

1. yum -y remove composer php-PsrLog php-composer-ca-bundle \
   php-composer-semver php-composer-spdx-licenses \
   php-composer-xdebug-handler php-fedora-autoloader \
   php-jsonlint php-justinrainbow-json-schema5 php-mbstring \
   php-password-compat php-seld-phar-utils php-symfony-browser-kit \
   php-symfony-class-loader php-symfony-common php-symfony-config \
   php-symfony-console php-symfony-css-selector php-symfony-debug \
   php-symfony-dependency-injection php-symfony-dom-crawler \
   php-symfony-event-dispatcher php-symfony-expression-language \
   php-symfony-filesystem php-symfony-finder \
   php-symfony-http-foundation php-symfony-http-kernel \
   php-symfony-polyfill php-symfony-process \
   php-symfony-var-dumper php-symfony-yaml

2. yum -y autoremove
